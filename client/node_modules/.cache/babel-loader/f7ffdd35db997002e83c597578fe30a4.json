{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JAEMIN\\\\Desktop\\\\crwn\\\\client\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../../pages/collection/collection.container';\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart(); // useEffect thinks fetchCollectionsStart() is just from props not from mapDispatchToProps.\n    // thats why when we don't set the array as the second argument, \n    // it will give a warning message in case fetchCollectionsStart() changes too often.\n  }, [fetchCollectionsStart]); // call 'fetchCollectionsStart()' only there is an update on fetchCollectionsStart\n  // we know fetchCollection sStart() is a props and it won't change.\n  // if we don't set the array, fetchCollectionsStart() will fire twice from checkCurrentUser of 'App' component.\n  // Lec 199 8:00\n  // componentDidMount() {\n  //   const { fetchCollectionsStart } = this.props;\n  //   fetchCollectionsStart();\n  // }\n  //const { match} = this.props; //Route comes with 3 parmeters; match history location\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/JAEMIN/Desktop/crwn/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,6CAApC;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA,qBAAF;AAAyBI,EAAAA;AAAzB,CAAD,KAAsC;AACrDP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,qBAAqB,GADP,CAEd;AACA;AACA;AACD,GALQ,EAKN,CAACA,qBAAD,CALM,CAAT,CADqD,CAOrD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACE;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AACQ,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAD5B;AAEE,IAAA,SAAS,EAAEJ,4BAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBADtB;AAEE,IAAA,SAAS,EAAEH,uBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAYD,CA7BH;;AAgCA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAGA,eAAeD,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPageContainer from '../../pages/collection/collection.container';\r\n\r\n\r\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\r\n  useEffect(() => {\r\n    fetchCollectionsStart(); \r\n    // useEffect thinks fetchCollectionsStart() is just from props not from mapDispatchToProps.\r\n    // thats why when we don't set the array as the second argument, \r\n    // it will give a warning message in case fetchCollectionsStart() changes too often.\r\n  }, [fetchCollectionsStart]) \r\n  // call 'fetchCollectionsStart()' only there is an update on fetchCollectionsStart\r\n  // we know fetchCollection sStart() is a props and it won't change.\r\n  // if we don't set the array, fetchCollectionsStart() will fire twice from checkCurrentUser of 'App' component.\r\n  // Lec 199 8:00\r\n  \r\n  // componentDidMount() {\r\n  //   const { fetchCollectionsStart } = this.props;\r\n  //   fetchCollectionsStart();\r\n  // }\r\n    //const { match} = this.props; //Route comes with 3 parmeters; match history location\r\n    return (\r\n      <div className='shop-page'> \r\n        <Route \r\n          exact path={`${match.path}`} \r\n          component={CollectionsOverviewContainer}\r\n        />\r\n        <Route \r\n          path={`${match.path}/:collectionId`} \r\n          component={CollectionPageContainer} \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n})\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}