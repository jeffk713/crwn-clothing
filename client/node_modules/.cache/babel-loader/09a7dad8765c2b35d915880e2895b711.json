{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : [] //Object.keys takes an object and returns an array with keys of the object.\n);\nexport const selectCollection = collectionUrlParam => // 'selectCollection' returns 'createSelector' so when calling it, \n//the syntax is \"selectCollection(collectionUrlParam)(state)\". lec 135 at 5:00\ncreateSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null //collections.find(collection=> collection.id === COLLECTION_ID_MAP[collectionUrlParam])\n// if data is stored in object(hash table data structure), the coding is simpler. \n//in array, looking for the last element takes loger than the first one.\n);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isfetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections //!!null, !!0, and !!false are falsy value. But !!anyobject including an empty one is truthy value\n);","map":{"version":3,"sources":["C:/Users/JAEMIN/Desktop/crwn/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isfetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEvDC,WAAW,IAAIA,WAAW,GAC1BE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAD0B,GAExB,EAJqD,CAKvD;AALuD,CAAlD;AAQP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAClD;AACA;AACEZ,cAAc,CACZ,CAACI,iBAAD,CADY,EAEZC,WAAW,IAAKA,WAAW,GAC3BA,WAAW,CAACO,kBAAD,CADgB,GAEzB,IAJU,CAKZ;AACA;AACA;AAPY,CAHT;AAaL,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACtD,CAACC,UAAD,CADsD,EAEtDE,IAAI,IAAIA,IAAI,CAACW,UAFyC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFsC,CAGrD;AAHqD,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n)\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections => collections ? \r\n  Object.keys(collections).map(key => collections[key])\r\n  : []\r\n  //Object.keys takes an object and returns an array with keys of the object.\r\n)\r\n\r\nexport const selectCollection = collectionUrlParam => \r\n// 'selectCollection' returns 'createSelector' so when calling it, \r\n//the syntax is \"selectCollection(collectionUrlParam)(state)\". lec 135 at 5:00\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ?\r\n    collections[collectionUrlParam]\r\n    : null)\r\n    //collections.find(collection=> collection.id === COLLECTION_ID_MAP[collectionUrlParam])\r\n    // if data is stored in object(hash table data structure), the coding is simpler. \r\n    //in array, looking for the last element takes loger than the first one.\r\n  )\r\n\r\n  export const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isfetching\r\n  )\r\n\r\n  export const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections \r\n    //!!null, !!0, and !!false are falsy value. But !!anyobject including an empty one is truthy value\r\n  )"]},"metadata":{},"sourceType":"module"}