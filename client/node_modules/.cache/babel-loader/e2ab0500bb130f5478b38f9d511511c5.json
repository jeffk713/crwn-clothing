{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    //if 'existingCartItem' exists, it gives true. if not, it gives false(undefined).\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["C:/Users/JAEMIN/Desktop/crwn/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAEzD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAzB;;AAEA,MAAIH,gBAAJ,EAAsB;AAAE;AACtB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAQ,IAC5BA,QAAQ,CAACC,EAAT,KAAcJ,aAAa,CAACI,EAA5B,GACI,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAkB;AAA1C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CAbM;AAeP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAEjE,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA5D,CAAzB;;AAEA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACD;;AAED,SAAOL,SAAS,CAACM,GAAV,CACLF,QAAQ,IACRA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACE,EAAC,GAAGD,QAAJ;AAAcG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAkB;AAA1C,GADF,GAEEH,QAJG,CAAP;AAMD,CAdM","sourcesContent":["\r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\r\n  \r\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\r\n  \r\n  if (existingCartItem) { //if 'existingCartItem' exists, it gives true. if not, it gives false(undefined).\r\n    return cartItems.map( cartItem =>\r\n      cartItem.id===cartItemToAdd.id\r\n        ? {...cartItem, quantity: cartItem.quantity+1}\r\n        : cartItem\r\n      )\r\n  }\r\n  \r\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }]\r\n}\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n  \r\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\r\n\r\n  if (existingCartItem.quantity === 1) {\r\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n  }\r\n\r\n  return cartItems.map(\r\n    cartItem => \r\n    cartItem.id === cartItemToRemove.id \r\n    ? {...cartItem, quantity: cartItem.quantity-1}\r\n    : cartItem\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}