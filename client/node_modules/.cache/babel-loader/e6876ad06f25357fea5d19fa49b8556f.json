{"ast":null,"code":"import { createSelector } from 'reselect'; // there are 2 types of selectors; input and output selectors\n// input selector does not use 'createSelector'\n// output selecotr uses input selectors and 'createSelector'\n//input selector\n\nconst selectCart = state => state.cart; //returns a slice off of rootReducer\n//output selector\n\n\nexport const selectCartItems = createSelector( //createSelector is a memoized selector\n[selectCart], //returns cart object\ncart => cart.cartItems //returns cartItems array off of cart object\n);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], //returns an array of cartItems\ncartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["C:/Users/JAEMIN/Desktop/crwn/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CACA;AACA;AACA;AAGA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAAwC;AAGxC;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,EAAE;AAC7C,CAACC,UAAD,CAD2C,EAC7B;AACdE,IAAI,IAAIA,IAAI,CAACE,SAF8B,CAEpB;AAFoB,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAIA,IAAI,CAACI,MAF+B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAChD,CAACI,eAAD,CADgD,EAC7B;AACnBC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAkCD,mBAAmB,GAACC,QAAQ,CAACC,QAAhF,EAAyF,CAAzF,CAFmC,CAA3C;AAKP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE3CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAkCD,mBAAmB,GAACC,QAAQ,CAACC,QAAT,GAAkBD,QAAQ,CAACG,KAAlG,EAAwG,CAAxG,CAF8B,CAAtC","sourcesContent":["import { createSelector } from 'reselect'; \r\n// there are 2 types of selectors; input and output selectors\r\n// input selector does not use 'createSelector'\r\n// output selecotr uses input selectors and 'createSelector'\r\n\r\n\r\n//input selector\r\nconst selectCart = state => state.cart; //returns a slice off of rootReducer\r\n\r\n\r\n//output selector\r\nexport const selectCartItems = createSelector( //createSelector is a memoized selector\r\n  [selectCart], //returns cart object\r\n  cart => cart.cartItems //returns cartItems array off of cart object\r\n);\r\n\r\nexport const selectCartHidden = createSelector(\r\n  [selectCart],\r\n  cart => cart.hidden\r\n)\r\n\r\nexport const selectCartItemsCount = createSelector(\r\n  [selectCartItems], //returns an array of cartItems\r\n  cartItems => cartItems.reduce((accumalatedQuantity, cartItem)=> accumalatedQuantity+cartItem.quantity,0)\r\n)\r\n\r\nexport const selectCartTotal = createSelector(\r\n  [selectCartItems],\r\n  cartItems => cartItems.reduce((accumalatedQuantity, cartItem)=> accumalatedQuantity+cartItem.quantity*cartItem.price,0)\r\n)"]},"metadata":{},"sourceType":"module"}